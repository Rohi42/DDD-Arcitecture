// <auto-generated />
using System;
using CGC.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CGC.Migrations
{
    [DbContext(typeof(WorkItemContext))]
    [Migration("20240201041413_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CGC.Domain.Aggregates.WIT.WorkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Rev")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkItem");
                });

            modelBuilder.Entity("CGC.Domain.Base.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descriptor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CGC.Domain.Aggregates.WIT.WorkItem", b =>
                {
                    b.OwnsOne("CGC.Domain.Models.ValueObjects.Fields", "Fields", b1 =>
                        {
                            b1.Property<int>("WorkItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CommonPriority")
                                .HasColumnType("int");

                            b1.Property<string>("CommonSeverity")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("CommonStateChangeDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CommonValueArea")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystemAreaPath")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystemAssignedToId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("SystemChangedById")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("SystemChangedDate")
                                .HasColumnType("datetime2");

                            b1.Property<int>("SystemCommentCount")
                                .HasColumnType("int");

                            b1.Property<string>("SystemCreatedById")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("SystemCreatedDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("SystemIterationPath")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystemReason")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystemState")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystemTeamProject")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystemTitle")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SystemWorkItemType")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TCMReproSteps")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WorkItemId");

                            b1.HasIndex("SystemAssignedToId");

                            b1.HasIndex("SystemChangedById");

                            b1.HasIndex("SystemCreatedById");

                            b1.ToTable("WorkItem");

                            b1.HasOne("CGC.Domain.Base.User", "SystemAssignedTo")
                                .WithMany()
                                .HasForeignKey("SystemAssignedToId");

                            b1.HasOne("CGC.Domain.Base.User", "SystemChangedBy")
                                .WithMany()
                                .HasForeignKey("SystemChangedById");

                            b1.HasOne("CGC.Domain.Base.User", "SystemCreatedBy")
                                .WithMany()
                                .HasForeignKey("SystemCreatedById");

                            b1.WithOwner()
                                .HasForeignKey("WorkItemId");

                            b1.Navigation("SystemAssignedTo");

                            b1.Navigation("SystemChangedBy");

                            b1.Navigation("SystemCreatedBy");
                        });

                    b.Navigation("Fields");
                });

            modelBuilder.Entity("CGC.Domain.Base.User", b =>
                {
                    b.OwnsOne("CGC.Domain.Models.ValueObjects.Links", "Links", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("UserId");

                            b1.ToTable("Links");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("CGC.Domain.Models.ValueObjects.Avatar", "Avatar", b2 =>
                                {
                                    b2.Property<string>("LinksUserId")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<string>("Href")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("LinksUserId");

                                    b2.ToTable("Links");

                                    b2.WithOwner()
                                        .HasForeignKey("LinksUserId");
                                });

                            b1.Navigation("Avatar");
                        });

                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
